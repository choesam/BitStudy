--03.조인

--문제1: 현재 급여가 많은 직원부터 직원의 사번, 이름, 그리고 연봉을 출력하시오
SELECT employee_id 사번, first_Name||last_Name 이름, salary 연봉
FROM employees
ORDER BY salary DESC;

--문제2: 전체 사원의 사번, 이름, 현재 직책을 이름 순서로 출력하세요
SELECT employee_id 사번, first_name||last_name 이름, e.job_id, j.job_title
FROM employees e, jobs j
WHERE e.job_id = j.job_id
ORDER BY first_name;

--문제3: 전체 사원의 사번, 이름, 현재 부서를 이름 순서로 출력하세요
SELECT employee_id 사번, first_name||last_name 이름, e.department_id, d.department_name
FROM employees e, departments d
WHERE e.department_id = d.department_id
ORDER BY first_name;

--문제4: 전체 사원의 사번, 이름 연봉, 직책, 부서를 모두 이름 순서로 출력합니다
SELECT employee_id 사번, first_name||last_name 이름, j.job_title 직책, d.department_name 부서
FROM employees e, departments d, jobs j
WHERE e.department_id = d.department_id AND e.job_id = j.job_id
ORDER BY first_name;
SELECT employee_id 사번, first_name||last_name 이름, j.job_title 직책, d.department_name 부서
FROM employees e 
INNER JOIN departments d ON e.department_id = d.department_id
INNER JOIN jobs j ON e.job_id = j.job_id
ORDER BY first_name;

--문제5: 직원 이름(last_name) 중에서 S(대문자)로 시작하는 직원들의 이름, 부서명, 직책을 조회하세요
SELECT employee_id 사번, first_name||' '||last_name 이름, j.job_title 직책, d.department_name 부서
FROM employees e, departments d, jobs j
WHERE e.department_id = d.department_id AND e.job_id = j.job_id AND e.last_name LIKE 'S%';

--문제6: 직책이 Stock Clerk인 사원 중에서 현재 급여가 2500이상인 사원을 급여가 큰 순서대로 출력하세요
SELECT *
FROM employees e, jobs j
WHERE e.job_id = j.job_id AND j.job_title = 'Stock Clerk' AND e.salary >= 2500;
SELECT *
FROM employees e INNER JOIN jobs j ON e.job_id = j.job_id 
WHERE j.job_title = 'Stock Clerk' AND e.salary >= 2500;

--문제7: 현재 급여가 8000이 넘는 직책을 직책, 급여로 급여가 큰 순서대로 출력하시오
SELECT e.first_name || ' ' || e.last_name 이름, j.job_title 직책, e.salary 급여
FROM jobs j, employees e
WHERE e.job_id = j.job_id
AND   e.salary > 8000
ORDER BY e.salary DESC;

--문제8: 현재 부서별 평균 연봉을 연봉이 큰 부서 순서대로 출력하세요
SELECT ROUND(AVG(e.salary),2), d.department_name
FROM employees e
INNER JOIN departments d ON e.department_id = d.department_id
GROUP BY d.department_name
ORDER BY ROUND(AVG(e.salary),2) DESC;

SELECT ROUND(AVG(e.salary),2)
FROM employees e
GROUP BY e.department_id
ORDER BY ROUND(AVG(e.salary),2) DESC;

--문제9: 현재 직책별 평균 연봉을 연봉이 큰 직책 순서대로 출력하세요
SELECT j.job_title 직책, ROUND(AVG(e.salary),0)  "평균 연봉" 
FROM employees e
INNER JOIN jobs j ON e.job_id = j.job_id
GROUP BY  j.job_title
ORDER BY AVG(e.salary) DESC;

SELECT e1.employee_id 사번, e1.first_name 사원, e2.first_name 매니져
FROM employees e1 
INNER JOIN employees e2 ON e1.manager_id = e2.employee_id
ORDER BY e1.employee_id;

--04.서브쿼리

--문제 01: 현재 평균 연봉보다 많은 월급을 받는 직원은 몇 명이나 있습니까?
SELECT COUNT(*)
FROM employees
WHERE salary > (SELECT AVG(salary) FROM employees);

--문제 02: 현재 각 부서별로 최고의 급여를 받는 사원의 사번, 이름, 부서?, 연봉을 조회(내림차순)
SELECT e.employee_id 사번, e.first_name||' '||e.last_name 이름, e.salary 연봉
FROM employees e
WHERE (e.salary, e.department_id) IN (SELECT MAX(e.salary) 연봉, e.department_id FROM employees e GROUP BY e.department_id);

--문제 03: 현재 자신의 부서 평균 급여보다 연봉이 많은 사원의 사번, 이름, 연봉을 조회하세요
SELECT e.employee_id 사번, e.first_name||' '||e.last_name 이름, e.salary 연봉
FROM employees e
INNER JOIN (select ROUND(AVG(salary),0) dAvg, department_id FROM employees GROUP BY department_id) a
ON e.department_id = a.department_id
WHERE e.salary > a.dAvg;

SELECT e.employee_id 사번, e.first_name||' '||e.last_name 이름, e.salary 연봉
FROM employees e
WHERE e.salary > (select ROUND(AVG(salary),0) 
                  FROM employees 
                  WHERE department_id = e.department_id
                  GROUP BY department_id);
                  
--문제 04:현재 사원들의 사번, 이름, 매니저 이름, 부서 이름으로 출력해보세요
SELECT e2.employee_id 사번, e2.first_name||' '||e2.last_name 이름, e1.first_name||' '||e1.last_name 매니저이름, d.department_name
FROM employees e1
INNER JOIN employees e2 ON e1.employee_id = e2.manager_id
INNER JOIN departments d ON e1.department_id = d.department_id
ORDER BY e2.employee_id;

select e.employee_id 사번, 
       e.first_name || ' ' || e.last_name 이름,
       (select first_name || ' ' || last_name
          from employees
          where employee_id = e.manager_id
       ) "매니저 이름",
       (select department_name
          from departments
          where department_id = e.department_id
       ) "부서 이름"
  from employees e;
  
--문제 05: 현재 평균연봉이 가장 높은 부서의 사원들의 사번, 이름, 직책, 연봉을 조회하고 연봉순으로 출력하세요
SELECT e.employee_id 사번, 
       e.first_name || ' ' || e.last_name 이름,
       j.job_title 직책,
       e.salary*12 연봉,
       e.department_id 부서
FROM employees e 
INNER JOIN jobs j ON j.job_id = e.job_id 
WHERE department_id = (SELECT department_id
                       FROM employees
                       GROUP BY department_id
                       HAVING AVG(employees.salary) >= (SELECT MAX(AVG(salary)) FROM employees GROUP BY department_id)
                       )
ORDER BY e.salary desc;

--문제 06: 평균 연봉이 가장 높은 부서는?
SELECT d.department_name
FROM departments d
WHERE d.department_id = (SELECT department_id 
                         FROM employees e 
                         GROUP BY department_id
                         HAVING AVG(salary) >= ALL(SELECT AVG(salary) FROM employees GROUP BY department_id)
                         );
                         
--문제 07: 평균 연봉이 가장 높은 직책은?
SELECT j.job_title
FROM jobs j
WHERE j.job_id = (SELECT job_id
                   FROM employees
                   GROUP BY job_id
                   HAVING AVG(salary) >= (SELECT MAX(AVG(salary)) FROM employees GROUP BY job_id));
                   
--문제 08: 현재 자신의 매니저보다 높은 연봉을 받고 있는 직원은?
--(부서이름, 사원이름, 연봉, 매니저 이름, 매니져 연봉 순으로 출력합니다)
SELECT d.department_name 부서이름, 
       e.first_name||' '||e.last_name 사원이름, 
       e.salary*12 연봉,
       em.first_name||' '||e.last_name 매니저이름,
       em.salary*12 매니저연봉
FROM employees e
INNER JOIN departments d ON e.department_id = d.department_id
INNER JOIN employees em ON e.manager_id = em.employee_id
WHERE e.salary > em.salary;
















